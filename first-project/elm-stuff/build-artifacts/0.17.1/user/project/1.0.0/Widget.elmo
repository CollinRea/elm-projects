var _user$project$Widget$update = F2(
	function (message, model) {
		var _p0 = message;
		if (_p0.ctor === 'MouseMsg') {
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					model,
					{count: model.count + 1}),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		} else {
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					model,
					{count: model.count + 2}),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		}
	});
var _user$project$Widget$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text(
				_elm_lang$core$Basics$toString(model.count))
			]));
};
var _user$project$Widget$initialModel = {count: 0};
var _user$project$Widget$Model = function (a) {
	return {count: a};
};
var _user$project$Widget$KeyMsg = function (a) {
	return {ctor: 'KeyMsg', _0: a};
};
var _user$project$Widget$MouseMsg = function (a) {
	return {ctor: 'MouseMsg', _0: a};
};
var _user$project$Widget$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$mouse$Mouse$clicks(_user$project$Widget$MouseMsg),
				_elm_lang$keyboard$Keyboard$presses(_user$project$Widget$KeyMsg)
			]));
};
